---
- name: install php libraries
  apt: name={{ item }} state=present update_cache=yes cache_valid_time=3600
  with_items:
    - build-essential
    - autoconf
    - libcurl4-openssl-dev
    - libmcrypt4
    - libmcrypt-dev
    - libicu52
    - libicu-dev
    - libpng12-dev
    - libjpeg62
    - libjpeg-dev
    - pkg-config

- name: create destination for source
  file: path={{ php_source_dir }} state=directory

- name: download php tarball
  get_url: url={{ php_source }} dest={{ php_source_dir }}

- name: unpack php source
  unarchive: src={{ php_source_path }} dest={{ php_source_dir }} copy=no
    creates={{ php_source_dir + php_dir }}

- name: install php
  command: '{{ item }} chdir={{ php_source_dir + php_dir }} creates=/usr/local/bin/php'
  with_items:
    - ./configure --with-openssl --with-zlib --with-curl
        --enable-zip --with-xmlrpc --enable-soap --enable-sockets
        --with-pgsql --with-pdo-pgsql --with-mcrypt --enable-mbstring
        --with-libxml-dir --enable-intl --enable-pcntl
        --enable-opcache --with-gd --with-jpeg-dir=/usr --enable-exif
        --enable-bcmath
    - make
    - make install

- name: copy the php.ini-development file
  command: cp php.ini-development /usr/local/lib/php.ini
      chdir={{ php_source_dir + php_dir }}
      creates=/usr/local/lib/php.ini
  when: not production

- name: copy the php.ini-production file
  command: cp php.ini-production /usr/local/lib/php.ini
      chdir={{ php_source_dir + php_dir }}
    creates=/usr/local/lib/php.ini
  when: production

- name: set the date.timezone in php.ini
  lineinfile: dest=/usr/local/lib/php.ini line="date.timezone=UTC"

- name: install composer
  shell: curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
  args:
      creates: /usr/local/bin/composer
