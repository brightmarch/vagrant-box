---
- name: create destination for source
  file: path={{ php_source_dir }} state=directory

- name: download php source
  get_url: url={{ php_source }} dest={{ php_source_dir }}

- name: unpack php source
  unarchive: src={{ php_source_path }} dest={{ php_source_dir }} copy=no
    creates={{ php_source_dir + php_dir }}

- name: compile php
  command: '{{ item }} chdir={{ php_source_dir + php_dir }} creates=/usr/local/bin/php'
  with_items:
    - ./configure --with-pdo-pgsql --with-zlib-dir --enable-mbstring --enable-soap --with-openssl --with-curl --with-zlib --enable-inline-optimization --with-bz2 --with-zlib --enable-sockets --enable-pcntl --enable-mbregex --enable-bcmath --with-pcre-regex --with-xmlrpc --enable-opcache --enable-intl --with-gd --enable-zip --with-jpeg-dir=/usr --with-png-dir=/usr --enable-gd-native-ttf --with-gettext --with-readline --enable-calendar --enable-sysvmsg --enable-sysvsem --enable-sysvshm --enable-shmop
    - make
    - make install

- name: setup php.ini
  command: cp {{ php_source_dir + php_dir}}/php.ini-production /usr/local/lib/php.ini

- name: set the date.timezone in php.ini
  lineinfile: dest=/usr/local/lib/php.ini line="date.timezone=UTC"

- name: set parameters in php.ini
  lineinfile:
    dest: /usr/local/lib/php.ini
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: "^memory_limit = 128M", line: "memory_limit = -1" }
    - { regexp: "^post_max_size = 8M", line: "post_max_size = 32M" }
    - { regexp: "^upload_max_filesize = 2M", line: "upload_max_filesize = 24M" }

- name: install redis extension
  command: pecl install redis

- name: install igbinary extension
  command: pecl install igbinary

- name: set the opcache extension in php.ini
  lineinfile: dest=/usr/local/lib/php.ini line="zend_extension=opcache.so"

- name: set the igbinary extension in php.ini
  lineinfile: dest=/usr/local/lib/php.ini line="extension=igbinary.so"

- name: set the redis extension in php.ini
  lineinfile: dest=/usr/local/lib/php.ini line="extension=redis.so"

- name: install composer
  shell: curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
  args:
    creates: /usr/local/bin/composer

- name: install phing
  shell: wget http://phing.info/get/phing-latest.phar -O /usr/local/bin/phing && chmod +x /usr/local/bin/phing
  args:
    creates: /usr/local/bin/phing
